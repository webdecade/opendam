<?php


/**
 * Skeleton subclass for performing query and update operations on the 'creative_commons' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * mer. 01 fÃ©vr. 2012 17:07:54 CET
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class CreativeCommonsPeer extends BaseCreativeCommonsPeer 
{
	const __CC_BY = 1;
	const __CC_BY_SA = 2;
	const __CC_BY_ND = 3;
	const __CC_BY_NC = 4;
	const __CC_BY_NC_SA = 5;
	const __CC_BY_NC_ND = 6;

	/*________________________________________________________________________________________________________________*/
	public static function getCreativeCommons()
	{
		$c = new Criteria();

		$c->addJoin(CreativeCommonsI18nPeer::ID, self::ID);
		$c->add(CreativeCommonsI18nPeer::CULTURE, sfContext::getInstance()->getUser()->getCulture());
		$c->addAscendingOrderByColumn(CreativeCommonsI18nPeer::TITLE);

		return self::doSelectWithI18n($c);
	}

	/*________________________________________________________________________________________________________________*/
	public static function getCreativeCommonForFiles($file_ids)
	{
		$creative_commons = Array();

		foreach($file_ids as $file_id)
		{
			$file = FilePeer::retrieveByPk($file_id);

			if($file && $file->getCreativeCommonsId())
			{
				$creative_common = self::retrieveByPk($file->getCreativeCommonsId());

				if(!in_array($creative_common, $creative_commons))
					$creative_commons[$creative_common->getId()] = $creative_common;
			}
		}

		return $creative_commons;
	}

	/*________________________________________________________________________________________________________________*/
	public static function getCreativeCommonForFolders($folder_ids)
	{
		$creative_commons = Array();

		foreach($folder_ids as $folder_id)
		{
			$folder = FolderPeer::retrieveByPk($folder_id);

			if($folder && $folder->getCreativeCommonsId())
			{
				$creative_common = self::retrieveByPk($folder->getCreativeCommonsId());

				if(!in_array($creative_common, $creative_commons))
					$creative_commons[$creative_common->getId()] = $creative_common;
			}
		}

		return $creative_commons;
	}
}
