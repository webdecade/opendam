<?php


/**
 * Skeleton subclass for performing query and update operations on the 'usage_use' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * mar. 31 janv. 2012 15:14:54 CET
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class UsageUsePeer extends BaseUsageUsePeer
{
	const __COMMERCIAL = 1;
	const __NO_COMMERCIAL = 2;
	const __COMMERCIAL_ALL = 3;
	const __COMMERCIAL_ALL_NO_RESALE = 4;

	/*________________________________________________________________________________________________________________*/
	public static function getUses()
	{
		$c = new Criteria();
		
		$c->addJoin(UsageUseI18nPeer::ID, self::ID);
		$c->add(UsageUseI18nPeer::CULTURE, sfContext::getInstance()->getUser()->getCulture());
		$c->addAscendingOrderByColumn(UsageUseI18nPeer::TITLE);

		return self::doSelectWithI18n($c);
	}

	/*________________________________________________________________________________________________________________*/
	public static function getUseForFiles($file_ids)
	{
		$uses = Array();

		foreach($file_ids as $file_id)
		{
			$file = FilePeer::retrieveByPk($file_id);

			if($file && $file->getUsageUseId())
			{
				$use = self::retrieveByPk($file->getUsageUseId());

				if(!in_array($use, $uses))
					$uses[$use->getId()] = $use;
			}
		}

		return $uses;
	}

	/*________________________________________________________________________________________________________________*/
	public static function getUseForFolders($folder_ids)
	{
		$uses = Array();

		foreach($folder_ids as $folder_id)
		{
			$folder = FolderPeer::retrieveByPk($folder_id);

			if($folder && $folder->getUsageUseId())
			{
				$use = self::retrieveByPk($folder->getUsageUseId());

				if(!in_array($use, $uses))
					$uses[$use->getId()] = $use;
			}
		}

		return $uses;
	}
}
